<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

       
    <mergewith point='parametricDistributions'>
        <!-- MultiMonophyleticConstraint -->
        <subtemplate id='MultiMonoConstraint' class='beast.math.distributions.MultiMonophyleticConstraint' mainid='MultiMonophyleticConstraint.$(n)'>
<![CDATA[
            <distribution spec='beast.math.distributions.MultiMonophyleticConstraint' id="MultiMonophyleticConstraint.$(n)" 
            	tree='@Tree.t:$(n)' newick='()' isBinary='false'/>
]]>
			<connect srcID="MultiMonophyleticConstraint.$(n)" targetID="prior" inputName="distribution" if="isInitializing"/>
        </subtemplate>


        <subtemplate id='SimpleRandomTree' class='beast.evolution.tree.SimpleRandomTree' mainid='SimpleRandomTree.t:$(n)'
        	suppressInputs="
        	beast.evolution.tree.SimpleRandomTree.weights,
	        beast.evolution.tree.SimpleRandomTree.taxa,
	        beast.evolution.tree.SimpleRandomTree.estimate,
        	beast.evolution.tree.SimpleRandomTree.trait,
        	beast.evolution.tree.SimpleRandomTree.taxonset,
        	beast.evolution.tree.SimpleRandomTree.nodetype,
        	beast.evolution.tree.SimpleRandomTree.initial">
<![CDATA[
            <tree spec='beast.evolution.tree.SimpleRandomTree' id='SimpleRandomTree.t:$(n)' estimate='false' initial="@Tree.t:$(n)">
                <taxa idref='data'/>
            </tree>
]]>
        </subtemplate>
    </mergewith>
</beast>


