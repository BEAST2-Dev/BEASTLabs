<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beast beautitemplate='Standard' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood" version="2.0">
<map name="Gamma">beast.math.distributions.Gamma</map>
<map name="prior">beast.math.distributions.Prior</map>

<!-- this analysis mimics the examples/release/tesetTreePathSampling.xml file from BEAST1 -->


    <data id="alignment" name="alignment">
        <sequence id="Sequence.0" taxon="A" totalcount="4" value="AGAGCTCTAAGAGCTCTAAGAGCTCTAAGAGCTCTA"/>
        <sequence id="Sequence.01" taxon="B" totalcount="4" value="AAGGCCTTTAAGGCCTTTAAGGCCTTTAAGGCCTTT"/>
    </data>


<run spec='beast.inference.PathSampler' chainLength="500000" alpha='0.3' rootdir='/tmp/step' burnInPercentage='50' preBurnin="50000" deleteOldLogs='true' nrofsteps='20'>
cd $(dir)
java -cp $(java.class.path) beast.app.beastapp.BeastMain $(resume/overwrite) -java -seed $(seed) beast.xml

  <mcmc chainLength="10000000" id="mcmc" spec="MCMC">
    <state id="state" storeEvery="1000">
        <tree id="Tree.t:alignment" name="stateNode">
            <taxonset id="TaxonSet.alignment" spec="TaxonSet">
                <data idref="alignment" name="alignment"/>
            </taxonset>
        </tree>
        <parameter id="kappa.s:alignment" lower="0.0" name="stateNode" value="10.0"/>
        <parameter dimension="4" id="freqParameter.s:alignment" lower="0.0" name="stateNode" upper="1.0" value="0.25"/>
    </state>

    <distribution id="posterior" spec="util.CompoundDistribution">
        <distribution id="prior" spec="util.CompoundDistribution">
            <prior id="KappaPrior.s:alignment" name="distribution" x="@kappa.s:alignment">
                <Gamma id="Gamma.0" name="distr" alpha='0.1' beta='1.0'/>
            </prior>
            <prior id="RootHeightPrior.s:alignment" name="distribution" x='@TreeHeight.t:alignment'>
                <Gamma id="Gamma.1" name="distr" alpha='1.0' beta='1.0'/>
            </prior>
        </distribution>
        <distribution id="likelihood" spec="util.CompoundDistribution">
            <distribution data="@alignment" id="treeLikelihood.alignment" spec="TreeLikelihood" tree="@Tree.t:alignment">
                <siteModel id="SiteModel.s:alignment" spec="SiteModel">
                    <parameter estimate="false" id="mutationRate.s:alignment" name="mutationRate" value="1.0"/>
                    <parameter estimate="false" id="gammaShape.s:alignment" name="shape" value="1.0"/>
                    <parameter estimate="false" id="proportionInvariant.s:alignment" lower="0.0" name="proportionInvariant" upper="1.0" value="0.0"/>
                    <substModel id="hky.s:alignment" kappa="@kappa.s:alignment" spec="HKY">
                        <frequencies frequencies="@freqParameter.s:alignment" id="estimatedFreqs.s:alignment" spec="Frequencies"/>
                    </substModel>
                </siteModel>
                <branchRateModel id="StrictClock.c:alignment" spec="beast.evolution.branchratemodel.StrictClockModel">
                    <parameter estimate="false" id="clockRate.c:alignment" name="clock.rate" value="1.0"/>
                </branchRateModel>
            </distribution>
        </distribution>
    </distribution>

    <operator id="treeRootScaler.t:alignment" rootOnly="true" scaleFactor="0.5" spec="ScaleOperator" tree="@Tree.t:alignment" weight="1.0"/>
<!--
    	True logMarginalLikelihood = -97.9 (random kappa)
    	True logMarginalLikelihood = -89.40 (kappa = 10)
-->

<!--
    <operator id="KappaScaler.s:alignment" parameter="@kappa.s:alignment" scaleFactor="0.5" spec="ScaleOperator" weight="1.0"/>
-->
    <logger fileName="alignment.$(seed).log" id="tracelog" logEvery="1000" model="@posterior" sanitiseHeaders="true" sort="smart">
        <log idref="posterior"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
        <log idref="treeLikelihood.alignment"/>
        <log id="TreeHeight.t:alignment" spec="beast.evolution.tree.TreeHeightLogger" tree="@Tree.t:alignment"/>
        <parameter idref="kappa.s:alignment" name="log"/>
    </logger>

    <logger id="screenlog" logEvery="1000">
        <log idref="posterior"/>
        <log arg="@posterior" id="ESS.0" spec="util.ESS"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
    </logger>

    <logger fileName="$(tree).$(seed).trees" id="treelog.t:alignment" logEvery="1000" mode="tree">
        <log id="TreeWithMetaDataLogger.t:alignment" spec="beast.evolution.tree.TreeWithMetaDataLogger" tree="@Tree.t:alignment"/>
    </logger>

    <init estimate="false" id="RandomTree.t:alignment" initial="@Tree.t:alignment" spec="beast.evolution.tree.RandomTree" taxa="@alignment">
        <populationModel id="ConstantPopulation0.t:alignment" spec="ConstantPopulation">
            <parameter id="randomPopSize.t:alignment" name="popSize" value="1"/>
        </populationModel>
    </init>
  </mcmc>
</run>

</beast>



