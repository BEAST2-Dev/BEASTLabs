<!-- Build BEASTlabs. It is also used by Hudson BEAST_II project. JUnit test is available for this build. -->
<project basedir="." default="build_jar_all_BEASTlabs" name="BUILD_BEAST_labs">
	<description>
	    Build BEASTlabs. 
            Also used by Hudson BEAST_II project. 
	    JUnit test is available for this build.
	    $Id: build_BEAST_II.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="srclabs" location="../BEASTLabs/src" />
	<property name="buildlabs" location="../BEASTLabs/build" />
	<property name="liblabs" location="../BEASTLabs/lib" />
	<property name="release_dir" value="release" />
	<property name="distlabs" location="${buildlabs}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="BeastFXpath" location="../BeastFX" />
	<property name="srcBeast2" location="${beast2path}/test" />
	<property name="beast2classpath" location="${beast2path}/build" />
	<property name="Add_on_dir" value="${release_dir}/add-on" />

	<!-- BEAST 2 currently uses Java 17 -->
	<property name="sourceVersion" value="17"/>
	<property name="targetVersion" value="17"/>


	<property name="version" value="1.9.7" />

    <import file="${beast2path}/build.xml" />


	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report" value="${buildlabs}/junitreport"/>

	<path id="classpath">
        <pathelement path="${buildlabs}"/>
		<fileset dir="${liblabs}" includes="nashorn-core-15.3.jar"/>
		<fileset dir="${beast2path}/lib/junit" includes="junit-*.jar"/>
		<fileset dir="${beast2path}/lib" includes="*.jar"/>
        <pathelement path="${beast2classpath}"/>
        <pathelement path="${BeastFXpath}/build"/>
	</path>

	<!-- start -->
	<target name="initBEASTlabs">
		<echo message="${ant.project.name}: ${ant.file}" />
        <available file="./version.xml" property="versionAvailable"/>
        <fail unless="versionAvailable">
              ** Required file version.xml does not exist. **
        </fail>

        <!-- Read package name and version from xml file -->
        <xmlproperty file="./version.xml" prefix="fromVersionFile" />
        <property name="BEASTLabsVersion" value="${fromVersionFile.package(version)}" />
    </target>




	<target name="cleanBEASTlabs">
    	<delete dir="${buildlabs}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_BEASTlabs" depends="cleanBEASTlabs,compile-allBEASTlabs,junitBEASTlabs"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_BEASTlabs" depends="cleanBEASTlabs,compile-allBEASTlabs,junitBEASTlabs,dist_all_BEASTlabs"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the BEASTlabs.jar and beauti.jar -->
	<target name="build_jar_all_BEASTlabs_NoJUnitTest" depends="cleanBEASTlabs,compile-allBEASTlabs,dist_all_BEASTlabs"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
<!--
	<target name="compile-allBEASTlabs" depends="initBEASTlabs,compile-all">
-->	
	<target name="compile-allBEASTlabs" depends="initBEASTlabs">


	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildlabs}" />

        <!-- add this if Zulu JDK not installed executable="../../Downloads/zulu17.36.13-ca-fx-jdk17.0.4-macosx_x64/zulu-17.jdk/Contents/Home/bin/javac" -->
		<!-- Compile the java code from ${srclabs} into ${buildlabs} /bin -->
		<javac srcdir="${srclabs}" destdir="${buildlabs}" classpathref="classpath"
			   target="${targetVersion}" source="${sourceVersion}"
			   fork="true" includeantruntime="false"
		       memoryinitialsize="256m"
		       memorymaximumsize="1024m">
			<include name="beastlabs/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/beast/**" />
		</javac>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the BEASTLabs.hjar and TreeAnnotator.jar -->
	<target name="dist_all_BEASTlabs" depends="compile-allBEASTlabs" description="create BEASTlabs jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distlabs}" />

		<!-- Put everything in ${buildlabs} into the beast.jar file -->
		<jar jarfile="${distlabs}/BEASTLabs.all.v${BEASTLabsVersion}.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEAST}" />
			</manifest>
			<fileset dir="${buildlabs}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="beast/**/*.class" />
				<include name="beast/**/*.properties" />
				<include name="beast/**/*.png" />
				<include name="beagle/**/*.class" />
				<include name="org/**/*.class" />
			</fileset>
			<zipgroupfileset dir="${liblabs}" includes="nashorn-core-15.3.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="jam.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="beagle.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="colt.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="commons-math3-3.1.1.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="antlr-runtime-4.10.jar"/>
		</jar>

		<jar jarfile="${distlabs}/treeannotator.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="beast.app.treeannotator.TreeAnnotator" />
			</manifest>
			<fileset dir="${buildlabs}">
				<include name="beast/**/*.class" />
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="beastlabs/**/*.class" />
				<include name="beastlabs/**/*.properties" />
				<include name="beastlabs/**/*.png" />
				<include name="beagle/**/*.class" />
				<include name="org/**/*.class" />
			</fileset>
			<zipgroupfileset dir="${beast2path}/lib" includes="jam.jar" />
			<!--zipgroupfileset dir="${lib}" includes="commons-math-II.0.jar" /-->
		</jar>
		<jar jarfile="${distlabs}/BEASTlabs.v${BEASTLabsVersion}.src.jar">
			<fileset dir="${srclabs}">
				<include name="beastlabs/**/*.java" />
				<include name="test/**/*.java" />
				<include name="beastlabs/**/*.png" />
				<include name="beastlabs/**/*.xsl" />
			</fileset>
        </jar>
		<jar jarfile="${distlabs}/BEASTlabs.v${BEASTLabsVersion}.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildlabs}">
				<include name="beastlabs/**/*.class" />
				<exclude name="**/**/Sequence.class"/>
				<exclude name="**/**/Prior.class"/>
				<exclude name="**/**/SkyrideBlockOperator.class"/>
				<include name="**/*.properties" />
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_BEASTlabs">
		<java jar="${distlabs}/BEASTLabs.all.v${BEASTLabsVersion}.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junitBEASTlabs" depends="compile-allBEASTlabs">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
<!--				<path location="${buildlabs}" />-->
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srclabs}">
                    <include name="test/**/*Test.java"/>
                    <exclude name="test/beast/integration/**/*Test.java"/>
				</fileset>
				<fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>                                         
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>                                         
                    <exclude name="test/beast/integration/**/ExampleXmlParsingTest.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>

	<target name="addon"
	        depends="build_jar_all_BEASTlabs_NoJUnitTest"
	        description="release BEAST 2 add-on version of BEASTlabs">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<mkdir dir="${Add_on_dir}/fxtemplates" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" includes="*.xml">
			</fileset>
		</copy>

		<copy todir="${Add_on_dir}/lib">
			<fileset  file="${distlabs}/BEASTlabs.v${BEASTLabsVersion}.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset file="${distlabs}/BEASTlabs.v${BEASTLabsVersion}.src.jar" />
		</copy>
		<copy todir="${Add_on_dir}/fxtemplates">
			<fileset file="fxtemplates/Weibull.xml" />
			<fileset file="fxtemplates/extras.xml" />
		</copy>
		<jar jarfile="${distlabs}/BEASTlabs.v${BEASTLabsVersion}.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Add-on version release is finished." />
	</target>

</project>
